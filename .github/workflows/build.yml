name: Build and Release
on:
  pull_request:
  push:
    branches:
      - master

jobs:
  build_for_linux_and_windows:
    runs-on: ubuntu-latest
    name: Build for Linux and Windows
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build Docker builder image
        run: docker build --build-arg UID=$(id -u) --build-arg GID=$(id -g) -f Dockerfile -t builder .
      - name: Build
        run: docker run --rm -v $(pwd):/app -w /app builder bash -ex build.sh --with-w64 --with-linux --without-macos
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: jar-linux-windows
          path: JVips.jar

  build_for_macos:
    runs-on: macos-latest
    name: Build for macOS
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Select Java
        uses: actions/setup-java@v1
        with:
          java-version: "1.8.0"
          java-package: jdk
          architecture: x64
      - name: Install vips
        run: ./setup-for-macos.sh
      - name: Build
        run: ./build.sh --with-macos --without-w64 --without-linux
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: jar-macos
          path: JVips.jar

  release:
    needs: [build_for_macos, build_for_linux_and_windows]
    if: github.ref == "refs/heads/master"
    runs-on: ubuntu-latest
    name: Merge macOS, Linux, Windows artifacts into a JAR and release it
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts
      - name: Merge artifacts
        id: merge
        run: |
          rm -rf tmp JVips.jar
          mkdir tmp
          (cd tmp; for jar in ../artifacts/*/JVips.jar; do unzip -uo $jar; done)
          jar -cvMf JVips.jar -C tmp .
          echo ::set-output name=jar_version::$(grep 'Implementation-Version' tmp/META-INF/MANIFEST.MF | cut -d ':' -f2)
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: jvips
          path: JVips.jar
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.merge.outputs.jar_version }}
          release_name: ${{ steps.merge.outputs.jar_version }}
          draft: false
          prerelease: false
      - name: Upload release asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: JVips.jar
          asset_name: JVips.jar
          asset_content_type: application/java-archive
